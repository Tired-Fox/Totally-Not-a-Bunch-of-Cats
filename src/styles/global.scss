@import url('https://fonts.googleapis.com/css2?family=Poppins&display=swap');

@import "colors";
@import "_font";


* {
    font-size: 62.5%;
    margin: 0;
    padding: 0;
    scroll-behavior: smooth;

    font-family: 'Poppins', sans-serif;
    color: #181717
}

body {
    box-sizing: border-box;
    background-color: map-get($map: $colors, $key: "tumbleweed");
}

br {
    content: "";
    display: block;
    font-size: 100%;

    height: 2rem;
}

img {
    max-width: 100%;
    height: auto;
}



code {
    color: #555;
    padding: 0.2em 0.4em;
    border-radius: 2px;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

pre {
    border-radius: 8px !important;
    margin: 1.2em 0 !important;
    padding: 1.2rem;

    box-shadow: 1px 1px 8px 1px #000000
}

pre code {
    padding: 0;
}

blockquote {
    border-left: 4px solid #cccccc;
    font-size: 1.4em;
    font-style: italic;
    margin: 2rem 0;
    padding-left: 2rem;
    padding-right: 2rem;
}

blockquote p {
    padding-bottom: 6px;
}

blockquote footer {
    font-size: 1.1rem;
    text-align: right;
}

figure {
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    -webkit-margin-start: 0;
    -webkit-margin-end: 0;
    margin: 0 0 3rem 0;
}

table {
    border-collapse: collapse;
    font-size: 1.125rem;
    margin: auto;
    box-shadow: 1px 1px 4px -1px #000000
}

table thead tr {
    background-color: #363636 !important;

    th {
        color: white !important;
        padding: 0.4rem 0.8rem;
    }
}

.contains-task-list {
    .task-list-item {
        list-style-type: none;
    }


}

.dark th {
    border-bottom: 2px solid map-get($map: $colors, $key: "quick-silver");
    padding: 0.4rem 0.8rem;
}

td {
    padding: 0.4rem 0.8rem;
}

table tbody tr:nth-of-type(even) {
    background-color: map-get($map: $colors, $key: "light-gray");
}

.container {
    margin: 0 auto;
    max-width: 42rem;
    width: 100%;
}

ol,
ul {
    padding-left: 2rem;
    -webkit-padding-start: 5%;
    -webkit-padding-end: 5%;
}

li {
    margin: 1rem 0;
}

li p {
    margin-bottom: 0.5rem;
    margin-top: 0.5rem;
}

hr {
    padding: 0;
    border: 0;
    height: 10px;
    margin: 40px auto;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg width='20' height='10'  viewBox='0 0 20 10' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-miterlimit='10'%3e%3cpath fill='none' d='M0 0h20v10H0z'/%3e%3cclipPath id='a'%3e%3cpath d='M0 0h20v10H0z'/%3e%3c/clipPath%3e%3cg clip-path='url(%23a)'%3e%3cpath d='M20 7.384c-4.999-.001-5-4.768-9.999-4.768C5 2.616 5 7.384 0 7.384' fill='none' stroke-width='3' stroke='%23548E9B'/%3e%3c/g%3e%3c/svg%3e");
}

.d-flex {
    display: flex
}

.flex-row {
    flex-direction: row;
}

.flex-column {
    flex-direction: column;
}

.flex-wrap {
    flex-wrap: wrap;
}

@for $i from 1 through 8 {
    .gap-#{$i} {
        gap: #{$i}rem !important;
    }
}

@each $type in "justify",
"align" {

    @each $specifier in "content",
    "items",
    "self" {

        @each $value in start,
        center,
        end {
            .#{$type}-#{$specifier}-#{$value} {
                #{$type}-#{$specifier}: $value  !important;
            }
        }
    }
}

@each $context in "content",
"items",
"self" {

    @each $key,
    $value in ("between": space-between, "around": space-around, "evenly": space-evenly) {
        .justify-#{$context}-#{$key} {
            justify-#{$context}: #{$value} !important;
        }
    }
}

/* Navigation */

p>a {
    text-decoration: none;
    box-shadow: inset 0 -0.12em 0 map-get($map: $colors, $key: "quick-silver");
    -webkit-transition: box-shadow 0.2s ease-in-out,
        color 0.2s ease-in-out;
    transition: box-shadow 0.2s ease-in-out, color 0.2s ease-in-out;
}

p>a:hover {
    box-shadow: inset 0 -1.5em 0 map-get($map: $colors, $key: "quick-silver");
    color: #fff;
}

a:hover {
    color: map-get($map: $colors, $key: "quick-silver");
}

#filler {
    height: 150vh;
}

@for $i from 1 through 20 {
    .w-#{$i*5}p {
        width: #{$i*5%} !important;
    }
}

@for $i from 1 through 5 {
    .w-#{$i*5} {
        width: #{$i*5}rem !important;
    }
}

@each $typekey,
$type in ("margin": "m",
    "padding": "p") {

    @each $dirkey,
    $dir in ("":"",
        "-top":"t",
        "-bottom":"b",
        "-left":"l",
        "-right":"r",
        "-inline":"-inine",
        "-block":"-block") {
        @for $i from 1 through 6 {
            .#{$type}#{$dir}-#{$i} {
                #{$typekey}#{$dirkey}: #{$i}rem !important;
            }
        }
    }

    .#{$type}-auto {
        #{$typekey}: auto !important;
    }

    .#{$type}-inline-auto {
        #{$typekey}-inline: auto !important;
    }

    .#{$type}-block-auto {
        #{$typekey}-block: auto !important;
    }
}

@each $typekey,
$type in ("margin": "m",
    "padding": "p") {

    @each $dirkey,
    $dir in ("":"",
        "-top":"t",
        "-bottom":"b",
        "-left":"l",
        "-right":"r",
        "-inline":"-inine",
        "-block":"-block") {
        @each $i in (10, 15) {
            .#{$type}#{$dir}-#{$i} {
                #{$typekey}#{$dirkey}: #{$i}rem !important;
            }
        }
    }
}

.mobile {
    @media only screen and (min-width: 60em) {
        display: none !important;
    }
}

.desktop {
    @media only screen and (max-width: 60em) {
        display: none !important;
    }
}

a {
    text-decoration: none;
    color: black;
    transition: .2s;
}

p,
.p,
code,
ul,
ol,
li,
th,
td,
h1,
h2,
h3,
h4,
h5,
h6 {
    transition: .2s;
}

.fit-content {
    width: fit-content;
    height: fit-content;
}

.button {
    width: fit-content;
    height: fit-content;

    margin: auto;

    padding-block: 1rem;
    padding-inline: 1.75rem;

    margin-top: 2rem;

    &>a {
        color: white;
    }

    border-radius: .75rem;
}

.d-none {
    display: none !important;
}

.d-block {
    display: block !important;
}

@each $name,
$color in $colors {
    .#{$name} {
        background-color: $color  !important;
    }

    a:hover .i-hover-#{$name} {
        color: $color  !important;
    }
}

.text-indent {
    text-indent: 2rem;
}

@each $value in left,
center,
right {
    .text-align-#{$value} {
        text-align: #{$value};
    }
}

@each $key,
$value in $colors {
    .color-#{$key} {
        color: #{$value} !important;
    }
}

@each $key,
$value in $colors {
    .fill-#{$key} {
        fill: #{$value} !important;
    }
}


@each $name,
$value in $colors {
    .border-#{$name} {
        border-color: #{$value} !important;
    }
}

@each $type in "dashed",
"dotted",
"solid",
"double" {
    .border-#{$type} {
        border-style: #{$type} !important;
    }
}

@each $dir in "",
"-top",
"-bottom",
"-left",
"-right" {
    @for $i from 1 through 4 {
        .border#{$dir}-#{$i} {
            border#{$dir}-width: #{$i}px !important;
        }
    }
}